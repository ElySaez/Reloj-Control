#########################################################################
# render.yaml  ·  Sistema Reloj-Control (ANTU)
# Infraestructura como código para Render.com
#########################################################################

# ─────────────────────────────────────
# 1. Base de datos (PostgreSQL)
# ─────────────────────────────────────
databases:
  - name: reloj-control-db        # Identificador interno en Render
    databaseName: relojcontroldb  # Nombre lógico dentro de PostgreSQL
    user: relojcontrol
    plan: free                    # Starter/Standard si necesitas más capacidad

# ─────────────────────────────────────
# 2. Grupo de variables de entorno
# ─────────────────────────────────────
envVarGroups:
  - name: reloj-control-common
    envVars:
      - key: TZ
        value: America/Santiago
      - key: JAVA_TOOL_OPTIONS
        value: "-XX:+UseG1GC"

# ─────────────────────────────────────
# 3. Servicios
# ─────────────────────────────────────
services:

  # 3.1 BACKEND · Spring Boot 3 + Maven
  - type: web
    name: reloj-control-backend
    branch: developer                  # Rama que vas a desplegar
    rootDir: reloj-control-backend     # Subcarpeta del proyecto
    runtime: java                      # Runtime nativo de Render
    plan: free
    buildCommand: ./mvnw -B test package
    startCommand: java -jar target/*SNAPSHOT.jar
    envVars:
      - fromGroup: reloj-control-common   # ⬅ Referencia al grupo
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: reloj-control-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: reloj-control-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: reloj-control-db
          property: password
    healthCheckPath: /actuator/health
    autoDeploy: true

  # 3.2 FRONTEND · React 18 + Vite
  - type: web
    name: reloj-control-frontend
    branch: developer
    rootDir: reloj-control-frontend
    runtime: node
    plan: free
    buildCommand: |
      npm ci
      npm run test -- --watchAll=false   # Abortará el build si un test falla
      npm run build
    staticPublishPath: dist
    envVars:
      - fromGroup: reloj-control-common
    buildFilter:                         # Acelera builds en monorepo
      paths:
        - "reloj-control-frontend/**"
    autoDeploy: true
